# ValueLadder Infrastructure Properties
# This file contains all infrastructure properties as Terraform locals
# These can be used throughout the configuration and shared with other projects

locals {
  # GCP Project Configuration
  gcp_project_id     = "storied-channel-467012-r6"
  gcp_project_name   = "jamr-websites"
  gcp_project_number = "604810533628"
  gcp_region         = "australia-southeast1"
  gcp_zone           = "australia-southeast1-a"
  
  # Environment Configuration
  environment        = "prod"
  application_name   = "jamr-websites"
  
  # Network Configuration
  vpc_name           = "jamr-websites-vpc"
  vpc_cidr           = "10.0.0.0/16"
  subnet_cidr        = "10.0.1.0/24"
  
  # Database Configuration
  database = {
    name      = "jamr_websites_db"
    version   = "MYSQL_8_0"
    edition   = "STANDARD"      # Explicitly set to Standard Edition
    tier      = "db-f1-micro"  # Smallest tier for development/testing
    charset   = "utf8mb4"
    collation = "utf8mb4_unicode_ci"
    
    # Database Users
    users = {
      root = {
        name = "root"
        host = "14.137.217.165"  # Restrict to your home IP only
        type = "BUILT_IN"
        # Password will be generated by Terraform for security
      }
      admin = {
        name = "admin"
        host = "14.137.217.165"  # Restrict to your home IP only
        type = "BUILT_IN"
      }
      app_user = {
        name = "app_user"
        host = "14.137.217.165"  # Restrict to your home IP only
        type = "BUILT_IN"
      }
    }
    
    # Database Instance Settings
    instance = {
      availability_type = "ZONAL"
      disk_autoresize  = true
      disk_size        = 10  # GB
      disk_type        = "PD_SSD"
      
      # Database Flags
      flags = [
        {
          name  = "max_connections"
          value = "100"
        },
        {
          name  = "innodb_buffer_pool_size"
          value = "134217728"  # 128MB
        }
        # Removed innodb_buffer_pool_size flag - incompatible with db-f1-micro tier
      ]
      
      # Backup Configuration
      backup = {
        enabled                        = true
        start_time                     = "02:00"  # 2 AM UTC
        point_in_time_recovery_enabled = true
        transaction_log_retention_days = 7
        retained_backups               = 7
      }
      
      # Maintenance Window
      maintenance = {
        day          = 7  # Sunday
        hour         = 3  # 3 AM AEST (1 PM UTC previous day)
        update_track = "stable"
      }
    }
  }
  
  # Resource Naming Convention
  resource_prefix    = "${local.application_name}-${local.environment}"
  
  # Tags and Labels
  common_labels = {
    project     = local.gcp_project_name
    environment = local.environment
    application = local.application_name
    managed_by  = "terraform"
    owner       = "valueladder"
  }
  
  # Network Tags
  network_tags = {
    http_server  = "http-server"
    https_server = "https-server"
    health_check = "health-check"
  }
  
  # Service Account Configuration
  service_account = {
    account_id   = "${local.application_name}-sa-${local.environment}"
    display_name = "Service Account for ${local.application_name} in ${local.environment}"
    description  = "Service account for application deployment and management"
  }
  
  # IAM Roles for Service Account
  service_account_roles = [
    "roles/logging.logWriter",
    "roles/monitoring.metricWriter"
  ]
  
  # Firewall Rules Configuration
  firewall_rules = {
    http_https = {
      ports        = ["80", "443"]
      source_ranges = ["0.0.0.0/0"]
      target_tags   = [local.network_tags.http_server, local.network_tags.https_server]
    }
    internal = {
      ports        = ["0-65535"]
      source_ranges = [local.vpc_cidr]
      target_tags   = []
    }
    health_check = {
      ports        = ["80", "443"]
      source_ranges = ["35.191.0.0/16", "130.211.0.0/22"]
      target_tags   = [local.network_tags.health_check]
    }
  }
  
  # Subnet Configuration
  subnets = {
    web = {
      name          = "${local.vpc_name}-web-subnet-${local.environment}"
      ip_cidr_range = "10.0.1.0/24"
      region        = local.gcp_region
      flow_logs     = true
      purpose       = "web-tier"
      access        = "public"
    }
    app = {
      name          = "${local.vpc_name}-app-subnet-${local.environment}"
      ip_cidr_range = "10.0.2.0/24"
      region        = local.gcp_region
      flow_logs     = true
      purpose       = "app-tier"
      access        = "controlled"
    }
    db = {
      name          = "${local.vpc_name}-db-subnet-${local.environment}"
      ip_cidr_range = "10.0.3.0/24"
      region        = local.gcp_region
      flow_logs     = true
      purpose       = "database-tier"
      access        = "private"
    }
  }
  
  # VPC Configuration
  vpc_config = {
    name                    = "${local.vpc_name}-${local.environment}"
    auto_create_subnetworks = false
    routing_mode            = "REGIONAL"
    flow_logs               = true
  }
}
